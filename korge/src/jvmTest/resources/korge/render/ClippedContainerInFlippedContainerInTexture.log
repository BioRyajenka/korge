createBuffer():0
createBuffer():1
createBuffer():2
createBuffer():3
createBuffer():4
createTexture():0
Texture[0].uploadedBitmap(200, 200)
RenderBuffer[0].setSize(200, 200)
createMainRenderBuffer():0
clear(#00000000, 1.0, 0, true, true, true)
clear(#00000000, 1.0, 0, true, true, true)
createTexture():1
Texture[1].uploadedBitmap(1, 1)
Buffer[0].afterSetMem(mem[96])
Buffer[1].afterSetMem(mem[16384])
Buffer[2].afterSetMem(mem[16384])
Buffer[3].afterSetMem(mem[12])
execute(AGBatch(frameBuffer=RenderBuffer[0], vertexData=AGVertexArrayObject(list=[AGVertexData(_buffer=Buffer[0], layout=VertexLayout[a_Pos, a_Tex, a_Col, a_Col2]), AGVertexData(_buffer=Buffer[1], layout=VertexLayout[a_TexIndex]), AGVertexData(_buffer=Buffer[2], layout=VertexLayout[a_Wrap])]), indices=Buffer[3], indexType=USHORT, program=Program(name=BatchBuilder2D.Tinted.NoAdd, attributes=[a_Tex, a_TexIndex, a_Wrap, a_Col, a_Col2, a_Pos], uniforms=[u_ProjMat, u_ViewMat, u_Tex0, u_Tex1, u_Tex2, u_Tex3, u_OutputPre]), uniforms=AGUniformValues(u_ProjMat=AGValue[TFLOAT]([[0.02, 0, 0, 0, 0, -0.02, 0, 0, 0, 0, -1, 0, -1, 1, 0, 1]]), u_ViewMat=AGValue[TFLOAT]([[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]]), u_Tex0=AGValue[TINT]([[0]]), u_Tex1=AGValue[TINT]([[1]]), u_Tex2=AGValue[TINT]([[2]]), u_Tex3=AGValue[TINT]([[3]]), u_OutputPre=AGValue[TBOOL]([[0]])), blending=Blending(outRGB = (srcRGB * srcA) + (dstRGB * (1 - srcA)), outA = (srcA * 1) + (dstA * (1 - srcA))), stencilOpFunc=AGStencilOpFunc(data=5591072), stencilRef=AGStencilReference(data=16776960), colorMask=AGColorMask(data=15), depthAndFrontFace=AGDepthAndFrontFace(data=33550336), scissor=Scissor(x=150, y=0, width=50, height=100), cullFace=NONE, drawType=TRIANGLES, drawOffset=0, vertexCount=6, instances=1))
---------
createTexture():2
createRenderBuffer():1
Texture[2].uploadedBitmap(150, 100)
RenderBuffer[1].setSize(150, 100)
clear(#00000000, 1.0, 0, true, true, true)
Buffer[0].afterSetMem(mem[96])
Buffer[1].afterSetMem(mem[16384])
Buffer[2].afterSetMem(mem[16384])
Buffer[3].afterSetMem(mem[12])
execute(AGBatch(frameBuffer=RenderBuffer[0], vertexData=AGVertexArrayObject(list=[AGVertexData(_buffer=Buffer[0], layout=VertexLayout[a_Pos, a_Tex, a_Col, a_Col2]), AGVertexData(_buffer=Buffer[1], layout=VertexLayout[a_TexIndex]), AGVertexData(_buffer=Buffer[2], layout=VertexLayout[a_Wrap])]), indices=Buffer[3], indexType=USHORT, program=Program(name=BatchBuilder2D.Tinted.NoAdd, attributes=[a_Tex, a_TexIndex, a_Wrap, a_Col, a_Col2, a_Pos], uniforms=[u_ProjMat, u_ViewMat, u_Tex0, u_Tex1, u_Tex2, u_Tex3, u_OutputPre]), uniforms=AGUniformValues(u_ProjMat=AGValue[TFLOAT]([[0.02, 0, 0, 0, 0, -0.02, 0, 0, 0, 0, -1, 0, -1, 1, 0, 1]]), u_ViewMat=AGValue[TFLOAT]([[1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, -75, 50, 0, 1]]), u_Tex0=AGValue[TINT]([[0]]), u_Tex1=AGValue[TINT]([[1]]), u_Tex2=AGValue[TINT]([[2]]), u_Tex3=AGValue[TINT]([[3]]), u_OutputPre=AGValue[TBOOL]([[0]])), blending=Blending(outRGB = (srcRGB * srcA) + (dstRGB * (1 - srcA)), outA = (srcA * 1) + (dstA * (1 - srcA))), stencilOpFunc=AGStencilOpFunc(data=5591072), stencilRef=AGStencilReference(data=16776960), colorMask=AGColorMask(data=15), depthAndFrontFace=AGDepthAndFrontFace(data=33550336), scissor=Scissor(x=75, y=-50, width=300, height=200), cullFace=NONE, drawType=TRIANGLES, drawOffset=0, vertexCount=6, instances=1))
ViewsForTesting.LogAG.readBitmap(Bitmap32(150, 100), 0, 0)